input {
  http_poller {
    urls => {
      sharepointchecks => {
        method => post
        body => '{
                    "size":200,
                    "query" : {
                       "bool" : {
                          "should" : [
                            {"wildcard" : {"message" : {"wildcard" : "*88xr*", "_name":"Workflow Errors"}} },
                            {"wildcard" : {"message" : {"wildcard" : "*eq8m*", "_name":"InfoPath Submission Errors"}} }
                          ],
                          "filter" : [
                            {"range" : {"@timestamp" : {"gte" : "now-30s"}}}
                          ],
                          "minimum_should_match" : 1
                       }
                    }
                 }'
        url => "http://localhost:9200/sharepointuls*/_search"
        headers => {
          Accept => "application/json"
        }
      }
    }
    request_timeout => 30
    interval => 25
    codec => "json"
    type => "elasticsearchquery"
  }
}

filter {
  if [type] == "elasticsearchquery" and [hits][hits] != [] {
    mutate {
      add_field => { "emailbody" => ""}
      add_field => { "matched_filters" => ""}
    }
    ruby {
      code => "event['hits']['hits'].each{|subdoc| subdoc['matched_queries'].each{|x| if !event['matched_filters'].include? x then event['matched_filters']+=x end} }"
    }
    ruby  {
      init => "require 'json'"
      code => "event['emailbody'] = JSON.pretty_generate(event['hits']['hits'])"
    }
  }
}

output {
  if [type] == "elasticsearchquery" and [hits][hits] != [] {
    email {
      to => "ccrossan@bucksiu.org"
      from => "elk@bucksiu.org"
      address => "mail.bucksiu.org"
      subject => "%{[hits][total]} SharePoint Workflow Errors in the last 30 seconds"
      body => "SharePoint log entries detected\nFilters Matched: %{matched_filters} \n \n %{emailbody} "
    }
  }
  #stdout { codec => rubydebug }
}
